{"version":3,"file":"static/js/544.d87f6dfd.chunk.js","mappings":"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","sources":["components/Api/FetchApi.jsx","components/Button/Button.styled.jsx","components/Button/Button.jsx","components/MoviesGalleryItem/MoviesGalleryItem.styled.jsx","components/MoviesGalleryItem/MoviesGalleryItem.jsx","components/MoviesGallery/MoviesGallery.styled.jsx","components/MoviesGallery/MoviesGallery.jsx","components/Section/Section.styled.jsx","components/Section/Section.jsx","components/helpers/urlGenerator.jsx","pages/Home/Home.jsx"],"sourcesContent":["import axios from 'axios';\n\n\nexport const API_KEY = 'b78238cdc81751fa548b93a11051a80f';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const fetchTrandingMovies = async (pageNumber = 1, options) => {\n  try {\n    const response = await axios.get(\n      `trending/all/day?api_key=${API_KEY}&page=${pageNumber}`,\n      options\n    );\n\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const fetchSearchMovies = async (searchQuery, pageNumber, options) => {\n  try {\n    const response = await axios.get(\n      `search/movie?api_key=${API_KEY}&language=en-US&query=${searchQuery}&page=${pageNumber}&include_adult=false`,\n      options\n    );\n\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const fetchMovieDetails = async (filmId, options) => {\n  try {\n    const response = await axios.get(\n      `movie/${filmId}?api_key=b78238cdc81751fa548b93a11051a80f&language=en-US`,\n      options\n    );\n\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const fetchMovieReviews = async (filmId, options) => {\n  try {\n    const response = await axios.get(\n      `movie/${filmId}/reviews?api_key=b78238cdc81751fa548b93a11051a80f&language=en-US`,\n      options\n    );\n\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const fetchMovieCredits = async (filmId, options) => {\n  try {\n    const response = await axios.get(\n      `movie/${filmId}/credits?api_key=b78238cdc81751fa548b93a11051a80f&language=en-US`,\n      options\n    );\n\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n","import styled from 'styled-components';\n\nexport const LoadMoreBtn = styled.button`\n  padding: 8px 16px;\n  margin: 0 auto;\n  border-radius: 2px;\n  background-color: #3f51b5;\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  text-align: center;\n  display: block;\n  color: #fff;\n  border: 0;\n  text-decoration: none;\n  cursor: pointer;\n  font-family: inherit;\n  font-size: 18px;\n  line-height: 24px;\n  font-style: normal;\n  font-weight: 500;\n  min-width: 180px;\n  background: linear-gradient(145deg, #0d013e, #05983d);\n     cursor: pointer;\n  &:hover,\n  &:focus {\n    color: #5dda21;\n    transform: scale(1.1);\n    box-shadow: 2px 6px 8px #5dda21, -2px -2px 6px #5dda21;\n  }\n`;\n","import { LoadMoreBtn } from './Button.styled';\n\nexport const Button = ({ onClick }) => {\n  return (\n    <LoadMoreBtn onClick={onClick} type=\"button\">\n      Show more\n    </LoadMoreBtn>\n  );\n};\n\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\nexport const MoviesGalleryItemWrp = styled.li`\n  flex-basis: calc((100% - 3 * 20px) / 4);\n  border-radius: 4px;\n  color: #ffffff;\n  background: linear-gradient(145deg, #1fe509, #a8b849);\n  transition: 250ms transform ease-in-out, 300ms box-shadow ease-out,\n    150ms color ease-in;\n  &:hover,\n  &:focus {\n    color: #80ff00;\n    transform: scale(1.03);\n    box-shadow: 2px 6px 8px #17bfb1, -2px -2px 6px #00ff4b;\n    cursor: pointer;\n  }\n`;\n\nexport const StyledLink = styled(NavLink)`\n  text-decoration: none;\n  color: #ffffff;\n  &.active {\n    color: #75e596;\n    background: linear-gradient(145deg, #b0aac9, #519fc3);\n  }\n`;\n\nexport const MoviesGalleryImageWrp = styled.div`\n  display: block;\n`;\n\nexport const MoviesGalleryImg = styled.img`\n  width: 100%;\n  object-fit: cover;\n  height: 545px;\n`;\n\nexport const MoviesGalleryContentWrp = styled.div`\n  padding: 20px 10px;\n`;\n\nexport const MoviesGalleryTitle = styled.h1`\n  font-size: 22px;\n  font-weight: 500;\n  height: 80px;\n`;\n\nexport const MoviesGalleryDate = styled.p`\n  font-weight: 500;\n`;\n\nexport const MoviesGalleryWrp = styled.span`\n  font-weight: 400;\n`;\n","import PropTypes from 'prop-types';\nimport { StyledLink } from './MoviesGalleryItem.styled';\nimport {\n  MoviesGalleryItemWrp,\n  MoviesGalleryImageWrp,\n  MoviesGalleryImg,\n  MoviesGalleryContentWrp,\n  MoviesGalleryTitle,\n \n} from './MoviesGalleryItem.styled';\nimport { urlGenerator } from 'components/helpers/urlGenerator';\nimport { useLocation } from 'react-router-dom';\n\nexport const MoviesGalleryItem = ({\n  movie: { title, name, poster_path, release_date, id },\n}) => {\n  const location = useLocation();\n  return (\n    <MoviesGalleryItemWrp>\n      <StyledLink to={`/movies/${id}`} state={{ from: location }}>\n        <MoviesGalleryImageWrp>\n          <MoviesGalleryImg\n            src={urlGenerator(poster_path)}\n            alt={title || name}\n          />\n        </MoviesGalleryImageWrp>\n        <MoviesGalleryContentWrp>\n          <MoviesGalleryTitle>{title || name}</MoviesGalleryTitle>\n          \n        </MoviesGalleryContentWrp>\n      </StyledLink>\n    </MoviesGalleryItemWrp>\n  );\n};\n\nMoviesGalleryItem.propTypes = {\n  movie: PropTypes.shape({\n    title: PropTypes.string,\n    name: PropTypes.string,\n    poster_path: PropTypes.string,\n    release_date: PropTypes.string,\n    id: PropTypes.number,\n  }),\n};\n","import styled from 'styled-components';\n\nexport const MoviesGalleryList = styled.ul`\n  max-width: calc(100vw - 48px);\n  display: flex;\n  gap: 20px;\n  flex-wrap: wrap;\n  margin-top: 0;\n  margin-bottom: 0;\n  padding: 0;\n  list-style: none;\n  margin-left: auto;\n  margin-right: auto;\n  padding: 20px;\n`;\n","import { MoviesGalleryItem } from 'components/MoviesGalleryItem/MoviesGalleryItem';\nimport { MoviesGalleryList } from './MoviesGallery.styled';\nimport PropTypes from 'prop-types';\n\nexport const MoviesGallery = ({ movies }) => {\n  return (\n    <MoviesGalleryList>\n      {movies.map(movie => (\n        <MoviesGalleryItem key={movie.id} movie={movie} />\n      ))}\n    </MoviesGalleryList>\n  );\n};\n\nMoviesGallery.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n    }).isRequired\n  ),\n};\n","import styled from 'styled-components';\n\nexport const SectionWrp = styled.section`\n  padding: 20px 0;\n`;\n\nexport const SectionTitle = styled.h1`\n  font-size: 28px;\n  text-align: center;\n`;\n","import PropTypes from 'prop-types';\nimport { SectionWrp, SectionTitle } from './Section.styled';\n\nexport const Section = ({ title, children }) => {\n  return (\n    <SectionWrp>\n      <SectionTitle>{title}</SectionTitle>\n      {children}\n    </SectionWrp>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node,\n};\n","export const urlGenerator = path => {\n \n  if (!path) {\n    return 'https://placeholder.pics/svg/300x200/29FF16-261E2A/FFC8C8-B674FF/%D0%9D%D0%B5%20%D0%B7%D0%BD%D0%B0%D0%B9%D0%B4%D0%B5%D0%BD%D0%BE';\n  }\n\n  return path.startsWith('/https')\n    ? path.slice(1)\n    : `https://image.tmdb.org/t/p/w500/${path}`;\n};\n","import { MoviesGallery } from 'components/MoviesGallery/MoviesGallery';\nimport { Button } from 'components/Button/Button';\nimport { Section } from 'components/Section/Section';\nimport { fetchTrandingMovies } from 'components/Api/FetchApi';\nimport { Loader } from 'components/Loader/Loader';\nimport { notify } from 'components/Notification/Notification';\nimport { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n  const [page, setPage] = useState(1);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const handleOnLoad = () => {\n    setPage(prevPage => prevPage + 1);\n  };\n\n  useEffect(() => {\n    async function fetchMovies(page) {\n      try {\n        setIsLoading(true);\n        const data = await fetchTrandingMovies(page);\n        setMovies(prevMovies => {\n          return page === 1 ? data.results : [...prevMovies, ...data.results];\n        });\n        if (data.results) {\n          return () => notify();\n        }\n        return data.results;\n      } catch (error) {\n        setMovies([]);\n        console.log(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    }\n    fetchMovies(page);\n  }, [page]);\n  return (\n    <main>\n      <Section title=\"Trending\">\n        {!!movies.length && <MoviesGallery movies={movies} />}\n      </Section>\n\n      {!!movies.length && page <= 100 && <Button onClick={handleOnLoad} />}\n      {isLoading && <Loader />}\n    </main>\n  );\n};\n\nHome.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      name: PropTypes.string.isRequired,\n      poster_path: PropTypes.string.isRequired,\n      release_date: PropTypes.string.isRequired,\n      title: PropTypes.string.isRequired,\n    }).isRequired\n  ),\n  page: PropTypes.number,\n  isLoading: PropTypes.bool,\n};\n\nexport default Home;"],"names":["API_KEY","axios","fetchTrandingMovies","pageNumber","options","response","data","console","log","fetchSearchMovies","searchQuery","fetchMovieDetails","filmId","fetchMovieReviews","fetchMovieCredits","LoadMoreBtn","styled","Button","onClick","type","MoviesGalleryItemWrp","StyledLink","NavLink","MoviesGalleryImageWrp","MoviesGalleryImg","MoviesGalleryContentWrp","MoviesGalleryTitle","MoviesGalleryItem","movie","title","name","poster_path","id","release_date","location","useLocation","to","state","from","src","urlGenerator","alt","MoviesGalleryList","MoviesGallery","movies","map","SectionWrp","SectionTitle","Section","children","path","startsWith","slice","useState","setMovies","page","setPage","isLoading","setIsLoading","useEffect","prevMovies","results","notify","message","fetchMovies","length","prevPage"],"sourceRoot":""}